syntax = "proto3";

package kratos.api;

import "google/protobuf/duration.proto";

option go_package = "kratos-sms/internal/conf;conf";

message Bootstrap {
    bool app_debug = 1;
    Server server = 2;
    Data data = 3;
    Log log = 4;
    Consul consul = 5;
}

message Server {
    message HTTP {
        string network = 1;
        string addr = 2;
        google.protobuf.Duration timeout = 3;
    }
    message GRPC {
        string network = 1;
        string addr = 2;
        google.protobuf.Duration timeout = 3;
    }
    HTTP http = 1;
    GRPC grpc = 2;
}

message Data {
    message Database {
        string driver = 1;
        // protocol host url etc.
        string source = 2;
        // MongoDB 数据库的专有配置
        Mongo mongo = 10;
    }
    message Redis {
        string network = 1;
        string addr = 2;
        google.protobuf.Duration read_timeout = 3;
        google.protobuf.Duration write_timeout = 4;
    }
    Database database = 1;
    Redis redis = 2;
}

message Mongo {
    google.protobuf.Duration connect_timeout = 1;
    google.protobuf.Duration heartbeat_interval = 2;
    uint32 min_pool_size = 3;
    uint32 max_pool_size = 4;
    // The read concern to use for read operations. e.g. majority, default to 1
    string read_concern = 5;
    //  ReadPrefMode indicates the user's preference on reads.
    ReadPrefMode read_prefer_mode = 6;

    enum ReadPrefMode {
        NONE = 0;
        // PrimaryMode indicates that only a primary is
        // considered for reading. This is the default
        // mode.
        PRIMARY = 1;
        // PrimaryPreferredMode indicates that if a primary
        // is available, use it; otherwise, eligible
        // secondaries will be considered.
        PRIMARY_PREFERRED = 2;
        // SecondaryMode indicates that only secondaries
        // should be considered.
        SECONDARY = 3;
        // SecondaryPreferredMode indicates that only secondaries
        // should be considered when one is available. If none
        // are available, then a primary will be considered.
        SECONDARY_PREFERRED = 4;
        // NearestMode indicates that all primaries and secondaries
        // will be considered.
        NEAREST = 5;
    }
}

message Log {
    // 默认日志文件
    FileLog default = 1;
    // 错误日志文件
    FileLog error = 2;
    // 是否为调试模式
    bool app_debug = 10;

    enum TextFormat {
        JSON = 0;
        CONSOLE = 1;
    }

    enum TimePrecision {
        DEFAULT = 0;
        MILLISECOND = 1;
        SECOND = 2;
    }

    // 实际日志级别需减1后再使用
    enum Level {
        DEBUG = 0;
        INFO = 1;
        WARN = 2;
        ERROR = 3;
        // PanicLevel used in development log
        D_PANIC = 4;
        PANIC = 5;
        FATAL = 6;
    }

    message FileLog {
        // 日志级别，注意实际使用需减1
        Level level = 1;
        // 完整日志文件名，含路径
        string filename = 2;
        // 日志格式，可选值为 json 或 console
        TextFormat text_format = 3;
        // 时间戳精度，可选值为 second 或 millisecond
        TimePrecision time_precision = 4;
        // 单个文件的大小，单位MB
        uint32 max_size = 5;
        // 最大归档文件个数
        uint32 max_backups = 6;
        // 最大保留天数
        uint32 max_age = 7;
        // 是否启用压缩
        bool compress = 8;
    }
}

message Consul {
    // Address is the address of the Consul server
    string address = 1;
    // Config Key path, must hash file suffix, e.g. yaml/json
    string path = 2;
    // Scheme is the URI scheme for the Consul server
    optional string scheme = 10;
    // Prefix for URIs for when consul is behind an API gateway (reverse
    // proxy).  The API gateway must strip off the PathPrefix before
    // passing the request onto consul.
    optional string path_prefix = 11;
    // Datacenter to use. If not provided, the default agent datacenter is used.
    optional string datacenter = 12;
    // HttpAuth is the auth info to use for http access.
    optional HttpBasicAuth http_auth = 13;
    // WaitTime limits how long a Watch will block. If not provided,
    // the agent default values will be used.
    optional google.protobuf.Duration wait_time = 14;
    // Token is used to provide a per-request ACL token
    // which overrides the agent's default token.
    optional string token = 15;
    // Namespace is the name of the namespace to send along for the request
    // when no other Namespace is present in the QueryOptions
    optional string namespace = 16;
}

message HttpBasicAuth {
    // Username to use for HTTP Basic Authentication
    string username = 1;
    // Password to use for HTTP Basic Authentication
    string password = 2;
}
